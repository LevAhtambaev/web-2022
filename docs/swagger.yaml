basePath: /
definitions:
  ds.Car:
    properties:
      bodyType:
        type: string
      color:
        type: string
      description:
        type: string
      engineType:
        type: string
      engineVolume:
        type: number
      gearbox:
        type: string
      image:
        type: string
      mileage:
        type: integer
      name:
        type: string
      power:
        type: integer
      salePrice:
        type: integer
      typeOfDrive:
        type: string
      uuid:
        type: string
      wheel:
        type: string
      year:
        type: integer
    type: object
  models.ModelCarCreated:
    properties:
      created:
        description: success
        type: boolean
    type: object
  models.ModelCarDeleted:
    properties:
      deleted:
        type: boolean
    type: object
  models.ModelCarPrice:
    properties:
      price:
        type: integer
    type: object
  models.ModelError:
    properties:
      description:
        description: description
        type: string
      error:
        description: error
        type: string
      type:
        description: type
        type: string
    type: object
  models.ModelPriceChanged:
    properties:
      changed:
        type: boolean
    type: object
host: 127.0.0.1:8080
info:
  contact:
    email: hopply@mail.ru
    name: API Support
    url: https://vk.com/hopply_time
  description: Showroom for japanese domestic market (JDM)
  license:
    name: AS IS (NO WARRANTY)
  title: CarShowroom
  version: "1.0"
paths:
  /cars:
    get:
      description: Get a list of all cars
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ds.Car'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ModelError'
      summary: Get all records
      tags:
      - Info
    post:
      description: Adding a new car to database
      parameters:
      - description: Название машины
        in: query
        name: Name
        required: true
        type: string
      - description: Цена машины
        in: query
        name: SalePrice
        required: true
        type: integer
      - description: Год производства
        in: query
        name: Year
        required: true
        type: integer
      - description: Тип двигателя
        in: query
        name: EngineType
        required: true
        type: string
      - description: Объем двигателя
        in: query
        name: EngineVolume
        required: true
        type: number
      - description: Кол-во л.с.
        in: query
        name: Power
        required: true
        type: integer
      - description: Тип коробки передач
        in: query
        name: Gearbox
        required: true
        type: string
      - description: Привод
        in: query
        name: TypeOfDrive
        required: true
        type: string
      - description: Цвет
        in: query
        name: Color
        type: string
      - description: Пробег
        in: query
        name: Mileage
        required: true
        type: integer
      - description: Расположение руля
        in: query
        name: Wheel
        type: string
      - description: Описание
        in: query
        name: Description
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ModelCarCreated'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ModelError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ModelError'
      summary: Add a new car
      tags:
      - Add
  /cars/:uuid:
    delete:
      description: Delete a car via its uuid
      parameters:
      - description: UUID машины
        in: query
        name: UUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ModelCarDeleted'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ModelError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ModelError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ModelError'
      summary: Delete a car
      tags:
      - Change
    get:
      description: Get a price via uuid of a car
      parameters:
      - description: UUID машины
        in: query
        name: UUID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ModelCarPrice'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ModelError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ModelError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ModelError'
      summary: Get price for a car
      tags:
      - Info
    put:
      description: Change a price for a car via its uuid
      parameters:
      - description: UUID машины
        in: query
        name: UUID
        required: true
        type: string
      - description: Новая цена
        in: query
        name: Price
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ModelPriceChanged'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ModelError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ModelError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ModelError'
      summary: Change car price
      tags:
      - Change
schemes:
- https
- http
swagger: "2.0"
